define(["jquery", "jqueryui", "block_integrityadvocate/jquery.dataTables"], function(e, i, t){return{init:function(){var i = !0; switch (window.block_integrityadvocate = {}, !0){case e("body").hasClass("block_integrityadvocate-overview-course"):i && window.console.log("M.block_integrityadvocate.init.js::Found overview_participants_table - DataTables adds the filter capability"), e("#participants").DataTable({autoWidth:!1, columnDefs:[{orderable:!1, targets:[4, 5]}], language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, order:[], ordering:!1, paginate:!1, paging:!1, searching:!0}); break; case e("body").hasClass("block_integrityadvocate-overview-user") || e("body").hasClass("block_integrityadvocate-overview-module"):; i && window.console.log("M.block_integrityadvocate.init.js::Found overview_participant_table - DataTables is the wholeUI"), window.block_integrityadvocate.eltDt = e("#block_integrityadvocate_participant_table"), window.block_integrityadvocate.isOverviewUserPage = e("body").hasClass("block_integrityadvocate-overview-user"); class t{constructor(){this.self = this, this.fadetime = 300, this.frm = {}, this.prefix = "block_integrityadvocate_override"}preventdefault(e){return void 0 !== e && e.preventDefault(), !1}overrideuiSetup(t){i && window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Started"); var r = this; return this.frm = t.find("." + this.prefix + "_form"), this.frm.eltEdit = t.find("." + this.prefix + "_edit"), this.frm.eltStatus = this.frm.find("." + this.prefix + "_status_select"), this.frm.eltReason = this.frm.find("." + this.prefix + "_reason"), this.frm.arrUserinputs = [this.frm.eltStatus, this.frm.eltReason], this.frm.eltTargetuserid = this.frm.find("." + this.prefix + "_targetuserid"), this.frm.eltOverrideuserid = this.frm.find("." + this.prefix + "_overrideuserid"), this.frm.eltSave = this.frm.find("." + this.prefix + "_save"), this.frm.eltLoading = this.frm.find("." + this.prefix + "_loading"), this.frm.eltCancel = this.frm.find("." + this.prefix + "_cancel"), this.frm.eltReason.attr("placeholder", M.util.get_string("override_reason_label", "block_integrityadvocate")).attr("pattern", "^[a-zA-Z0-9 .,_-]{0,32}").on("keyup keypress", function(e){var t = e.keyCode || e.which; if (i && window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Enter pressed"), 13 === t)return r.frm.eltSave.click(), e.preventDefault(), !1}), i && window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Built frm", this.frm), this.frm.eltLoading.hide(), this.saveSetStatus(!1), this.frm.trigger("reset"), this.frm.eltSave.on("click", function(e){return i && window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::eltSave.on.click()::Started"), r.validateAll() && r.saveClick(), e.preventDefault(), !1}), this.frm.eltEdit.on("click", function(e){return r.overrideuiShow(), e.preventDefault(), !1}), this.frm.eltCancel.on("click", function(e){return r.cancelClick(), e.preventDefault(), !1}), e(this.frm.arrUserinputs).each(function(e, i){i.on("change keyup blur", function(e){return function(e, i, t){void 0 === window.delayed_methods && (window.delayed_methods = {}), delayed_methods[e] = Date.now(); var r = delayed_methods[e]; setTimeout(function(){delayed_methods[e] == r && (delayed_methods[e] = "", i())}, t || 500)}("validate_and_toggle_save_button", function(){r.saveSetStatus(r.validateAll())}, 600), e.preventDefault(), !1})}), this}cancelClick(){this.frm.trigger("reset"), this.overrideuiHide(), this.frm.closest("td").find(".oldstatusinfo, .block_integrityadvocate_overriden_icon").show(), e(".block_integrityadvocate_override_edit").show()}saveClick(){var e = this; this.inputsDisable(), i && window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Started with frm=", this.frm); var t = new URL(window.location.href); require(["core/ajax"], function(r){r.call([{methodname:"block_integrityadvocate_set_override", args:{status:e.frm.eltStatus.val(), reason:e.frm.eltReason.val(), targetuserid:e.frm.eltTargetuserid.val(), overrideuserid:e.frm.eltOverrideuserid.val(), blockinstanceid:t.searchParams.get("instanceid"), moduleid:e.frm.parents("tr").find(".block_integrityadvocate_participant_activitymodule").attr("data-cmid")}, done:function(){i && window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.done"), window.location.reload(!0)}, fail:function(e, t, r){i && window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.fail"), console.log("textStatus", t), console.log("errorThrown", r), alert(M.util.get_string("unknownerror", "moodle")), window.location.reload(!0)}, always:function(){i && window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.always"), e.inputsEnable(), e.cancelClick()}}])}), i && window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Done")}validateAll(){var e = this.validateReason(), i = this.validateStatus(); return e && i}validateStatus(){var e = this.frm.eltStatus, i = e.val(); return e[0].checkValidity() || 0 === i || 3 === i}validateReason(){var e = this.frm.eltReason; return i && window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with frm=", this.frm), i && window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with elt=", e), e.val(e.val().trim()), e[0].setCustomValidity(""), !!e[0].checkValidity() || (e[0].setCustomValidity(M.util.get_string("override_reason_invalid", "block_integrityadvocate")), !1)}saveSetStatus(e){e?this.saveEnable():this.saveDisable()}saveDisable(){this.frm.eltSave.css("color", "grey").on("click." + this.prefix + "_disable", this.preventdefault)}saveEnable(){this.frm.eltSave.css("color", "").off("click." + this.prefix + "_disable")}overrideuiShow(){this.frm.eltEdit.hide(), this.frm.show(), this.frm.eltSave.fadeOut(this.fadetime).fadeIn(this.fadetime), this.validateAll()}overrideuiHide(){this.frm.hide(), this.frm.eltEdit.fadeIn(this.fadetime)}inputsDisable(){this.frm.eltCancel.hide(), this.frm.eltSave.hide(), this.frm.eltLoading.show(), e(this.frm.arrUserinputs).each(function(e, i){i.attr("disabled", "disabled")})}inputsEnable(){this.frm.eltCancel.show(), this.frm.eltSave.show(), this.frm.eltLoading.hide(), e(this.frm.arrUserinputs).each(function(e, i){i.removeAttr("disabled")})}}window.block_integrityadvocate.eltDt.dataTable({autoWidth:!0, language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, ordering:!0, order:[[0, "desc"], [1, "desc"]], "row-border":!0, searching:!0, scrollX:!0, paging:!0, lengthChange:!1, columnDefs:[{targets:[4], orderable:!1, searchable:!1}], initComplete:function(){i && window.console.log("M.block_integrityadvocate.init.js::DataTables.initComplete:fired"); var r = window.block_integrityadvocate.eltDt, o = r.dataTable(); o.api().columns([6, 7, 8, 9]).visible(!1), r.find(".block_integrityadvocate_participant_session_overridden").each(function(){e(this).append('<i class="fa fa-chevron-circle-down block_integrityadvocate_overriden_icon" aria-hidden="true" title="' + M.util.get_string("viewhide_overrides", "block_integrityadvocate") + '"></i>'), e(this).find("i.block_integrityadvocate_overriden_icon").click(function(){i && window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click fired"); var t, r, a = e(this).parents("tr"), d = o.api().row(a); if (d.child.isShown())i && window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:This row is already open - close it"), d.child.hide(), a.removeClass("shown"), e(this).removeClass("fa-chevron-circle-up").addClass("fa-chevron-circle-down");  else{i && window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:Open this row"); var n = {overridetime:d.data()[6], overridestatus:d.data()[7], overrider:d.data()[8], overridereason:d.data()[9]}; d.child((t = n, r = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;"><tr><td>Override time:</td><td>' + t.overridetime + "</td></tr><tr><td>Override original status:</td><td>" + t.overridestatus + "</td></tr><tr><td>Overrider:</td><td>" + t.overrider + "</td></tr><tr><td>Override reason:</td><td>" + t.overridereason + "</td></tr></table>", i && window.console.log("M.block_integrityadvocate.init.js::Built childrow=", r), r)).show(), a.addClass("shown"), e(this).removeClass("fa-chevron-circle-down").addClass("fa-chevron-circle-up")}})}), r.find(".block_integrityadvocate_participant_session_overrideui").each(function(){var r = e(this), o = r.contents().filter((e, i) => 3 === i.nodeType); r.prepend('<div class="oldstatusinfo">' + o.text() + "</div>"), o.remove(), r.append('<i class="fa fa-pencil-square-o block_integrityadvocate_override_edit" aria-hidden="true" title="' + M.util.get_string("override_form_label", "block_integrityadvocate") + '"></i>'); var a = new t; r.find("i.block_integrityadvocate_override_edit").click(function(){i && window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Override button clicked"); var t = ".block_integrityadvocate_override_form"; i && window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::No existing form found"), r.find(".oldstatusinfo").hide(), r.find(t).length < 1?(i && window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Add the editing form and init it"), r.append(e(t).first().clone()), r.find(t).show(), a.overrideuiSetup(r)):(i && window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Existing form found - show it"), r.find(t).show()), e(".block_integrityadvocate_override_edit").hide(), r.find(".block_integrityadvocate_overriden_icon").hide(), a.overrideuiShow()})}), r.find(".block_integrityadvocate_participant_session_jquimodal").on("click.modalpic", function(){i && window.console.log("M.block_integrityadvocate.init.js::jquimodal.click.modalpic fired"), e("#dialog").html('<div id="dialog" title="image"><img src="' + e(this).attr("src") + '" width="500" /></div>').dialog({modal:!0, width:"auto", open:function(){e(".ui-widget-overlay").bind("click", function(){e("#dialog").dialog("close")})}})})}})}}}});
        //# sourceMappingURL=init.min.js.map
