define(["jquery", "jqueryui", "block_integrityadvocate/jquery.dataTables", "core/ajax"], (function(e, i, t, o){return{init:function(){void 0 === M.block_integrityadvocate && (M.block_integrityadvocate = {}), M.block_integrityadvocate = {...M.block_integrityadvocate}; switch (!0){case e("body").hasClass("block_integrityadvocate-overview-course"):window.console.log("M.block_integrityadvocate.init.js::overview-course: Found overview_participants_table - DataTables adds the filter capability"), e("#block_integrityadvocate_overview-course").DataTable({columnDefs:[{orderable:!1, targets:[3, 4]}], language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, paging:!1, searching:!0}); break; case e("body").hasClass("block_integrityadvocate-overview-user") || e("body").hasClass("block_integrityadvocate-overview-module"):window.console.log("M.block_integrityadvocate.init.js::overview-user:Found overview_participant_table - DataTables is the wholeUI"), M.block_integrityadvocate.eltDt = e("#block_integrityadvocate_participant_table"), M.block_integrityadvocate.isOverviewUserPage = e("body").hasClass("block_integrityadvocate-overview-user"); class i{constructor(){this.self = this, this.fadetime = 300, this.frm = {}, this.prefix = "block_integrityadvocate_override"}preventdefault(e){return void 0 !== e && e.preventDefault(), !1}overrideuiSetup(i){window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Started"); var t = this; return this.frm = i.find("." + this.prefix + "_form"), this.frm.eltEdit = i.find("." + this.prefix + "_edit"), this.frm.eltStatus = this.frm.find("." + this.prefix + "_status_select"), this.frm.eltReason = this.frm.find("." + this.prefix + "_reason"), this.frm.arrUserinputs = [this.frm.eltStatus, this.frm.eltReason], this.frm.eltTargetuserid = this.frm.find("." + this.prefix + "_targetuserid"), this.frm.eltOverrideuserid = this.frm.find("." + this.prefix + "_overrideuserid"), this.frm.eltSave = this.frm.find("." + this.prefix + "_save"), this.frm.eltLoading = this.frm.find("." + this.prefix + "_loading"), this.frm.eltCancel = this.frm.find("." + this.prefix + "_cancel"), this.frm.eltReason.attr("placeholder", M.util.get_string("override_reason_label", "block_integrityadvocate")).attr("pattern", "^[a-zA-Z0-9 .,_-]{0,32}").on("keyup keypress", (function(e){var i = e.keyCode || e.which; if (window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Enter pressed"), 13 === i)return t.frm.eltSave.click(), e.preventDefault(), !1})), window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Built frm", this.frm), this.frm.eltLoading.hide(), this.saveSetStatus(!1), this.frm.trigger("reset"), this.frm.eltSave.on("click", (function(e){return window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::eltSave.on.click()::Started"), t.validateAll() && t.saveClick(), e.preventDefault(), !1})), this.frm.eltEdit.on("click", (function(e){return t.overrideuiShow(), e.preventDefault(), !1})), this.frm.eltCancel.on("click", (function(e){return t.cancelClick(), e.preventDefault(), !1})), e(this.frm.arrUserinputs).each((function(e, i){i.on("change keyup blur", (function(e){return function(e, i, t){void 0 === window.delayed_methods && (window.delayed_methods = {}), delayed_methods[e] = Date.now(); var o = delayed_methods[e]; setTimeout((function(){delayed_methods[e] == o && (delayed_methods[e] = "", i())}), t || 500)}("validate_and_toggle_save_button", (function(){t.saveSetStatus(t.validateAll())}), 600), e.preventDefault(), !1}))})), this}cancelClick(){this.frm.trigger("reset"), this.overrideuiHide(), this.frm.closest("td").find(".oldstatusinfo, .block_integrityadvocate_overriden_icon").show(), e(".block_integrityadvocate_override_edit").show()}saveClick(){var e = this; this.inputsDisable(), window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Started with frm=", this.frm); var i = new URL(window.location.href); require(["core/ajax"], (function(t){t.call([{methodname:"block_integrityadvocate_set_override", args:{status:e.frm.eltStatus.val(), reason:e.frm.eltReason.val(), targetuserid:e.frm.eltTargetuserid.val(), overrideuserid:e.frm.eltOverrideuserid.val(), blockinstanceid:i.searchParams.get("instanceid"), moduleid:e.frm.parents("tr").find(".block_integrityadvocate_participant_activitymodule").attr("data-cmid")}, done:function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.done"), window.location.reload(!0)}, fail:function(e, i, t){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.fail"), console.log("textStatus", i), console.log("errorThrown", t), alert(M.util.get_string("unknownerror", "moodle")), window.location.reload(!0)}, always:function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.always"), e.inputsEnable(), e.cancelClick()}}])})), window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Done")}validateAll(){var e = this.validateReason(), i = this.validateStatus(); return e && i}validateStatus(){var e = this.frm.eltStatus, i = e.val(); return e[0].checkValidity() || 0 === i || 3 === i}validateReason(){var e = this.frm.eltReason; return window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with frm=", this.frm), window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with elt=", e), e.val(e.val().trim()), e[0].setCustomValidity(""), !!e[0].checkValidity() || (e[0].setCustomValidity(M.util.get_string("override_reason_invalid", "block_integrityadvocate")), !1)}saveSetStatus(e){e?this.saveEnable():this.saveDisable()}saveDisable(){this.frm.eltSave.css("color", "grey").on("click." + this.prefix + "_disable", this.preventdefault)}saveEnable(){this.frm.eltSave.css("color", "").off("click." + this.prefix + "_disable")}overrideuiShow(){this.frm.eltEdit.hide(), this.frm.show(), this.frm.eltSave.fadeOut(this.fadetime).fadeIn(this.fadetime), this.validateAll()}overrideuiHide(){this.frm.hide(), this.frm.eltEdit.fadeIn(this.fadetime)}inputsDisable(){this.frm.eltCancel.hide(), this.frm.eltSave.hide(), this.frm.eltLoading.show(), e(this.frm.arrUserinputs).each((function(e, i){i.attr("disabled", "disabled")}))}inputsEnable(){this.frm.eltCancel.show(), this.frm.eltSave.show(), this.frm.eltLoading.hide(), e(this.frm.arrUserinputs).each((function(e, i){i.removeAttr("disabled")}))}}M.block_integrityadvocate.eltDt.dataTable({autoWidth:!0, language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, ordering:!0, order:[[0, "desc"], [1, "desc"]], "row-border":!0, searching:!0, scrollX:!0, paging:!0, lengthChange:!1, columnDefs:[{targets:[4], orderable:!1, searchable:!1}], initComplete:function(){window.console.log("M.block_integrityadvocate.init.js::DataTables.initComplete:fired"), M.block_integrityadvocate.eltDt = eltDt = M.block_integrityadvocate.eltDt; var t, o = eltDt.dataTable(); o.api().columns([6, 7, 8, 9]).visible(!1), eltDt.find(".block_integrityadvocate_participant_session_overridden").each((function(){e(this).append('<i class="fa fa-chevron-circle-down block_integrityadvocate_overriden_icon" aria-hidden="true" title="' + M.util.get_string("viewhide_overrides", "block_integrityadvocate") + '"></i>'), e(this).find("i.block_integrityadvocate_overriden_icon").click((function(){window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click fired"); var i, t, r = e(this).parents("tr"), a = o.api().row(r); if (a.child.isShown())window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:This row is already open - close it"), a.child.hide(), r.removeClass("shown"), e(this).removeClass("fa-chevron-circle-up").addClass("fa-chevron-circle-down");  else{window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:Open this row"); var d = {overridetime:a.data()[6], overridestatus:a.data()[7], overrider:a.data()[8], overridereason:a.data()[9]}; a.child((i = d, t = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;"><tr><td>Override time:</td><td>' + i.overridetime + "</td></tr><tr><td>Override original status:</td><td>" + i.overridestatus + "</td></tr><tr><td>Overrider:</td><td>" + i.overrider + "</td></tr><tr><td>Override reason:</td><td>" + i.overridereason + "</td></tr></table>", window.console.log("M.block_integrityadvocate.init.js::Built childrow=", t), t)).show(), r.addClass("shown"), e(this).removeClass("fa-chevron-circle-down").addClass("fa-chevron-circle-up")}}))})), eltDt.find(".block_integrityadvocate_participant_session_overrideui").each((function(){var t = e(this), o = t.contents().filter(((e, i) => 3 === i.nodeType)); t.prepend('<div class="oldstatusinfo">' + o.text() + "</div>"), o.remove(), t.append('<i class="fa fa-pencil-square-o block_integrityadvocate_override_edit" aria-hidden="true" title="' + M.util.get_string("override_form_label", "block_integrityadvocate") + '"></i>'); var r = new i; t.find("i.block_integrityadvocate_override_edit").click((function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Override button clicked"); var i = ".block_integrityadvocate_override_form"; window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::No existing form found"), t.find(".oldstatusinfo").hide(), t.find(i).length < 1?(window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Add the editing form and init it"), t.append(e(i).first().clone()), t.find(i).show(), r.overrideuiSetup(t)):(window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Existing form found - show it"), t.find(i).show()), e(".block_integrityadvocate_override_edit").hide(), t.find(".block_integrityadvocate_overriden_icon").hide(), r.overrideuiShow()}))})), t = eltDt, window.console.log("M.block_integrityadvocate.init.js::showPicturesBig::Started with elt=", t), e(t).find(".block_integrityadvocate_picture_jquimodal").on("click.modalpic", (function(){window.console.log("M.block_integrityadvocate.init.js::jquimodal.click.modalpic fired"), e("#dialog").html('<div id="dialog" title="image"><img src="' + e(this).attr("src") + '" width="500" /></div>').dialog({modal:!0, width:"auto", open:function(){e(".ui-widget-overlay").bind("click", (function(){e("#dialog").dialog("close")}))}})}))}})}}}}));