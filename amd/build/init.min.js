define(["jquery", "jqueryui", "block_integrityadvocate/jquery.dataTables"], function(a){return{init:function(){switch (!0){case a("body").hasClass("block_integrityadvocate-overview-course"):window.console.log("M.block_integrityadvocate.init.js::Found overview_participants_table - DataTables adds the filter capability"), a("#participants").DataTable({autoWidth:!1, columnDefs:[{orderable:!1, targets:[4, 5]}], info:!1, language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, order:[], ordering:!1, paginate:!1, paging:!1, searching:!0}); break; case a("body").hasClass("block_integrityadvocate-overview-user") || a("body").hasClass("block_integrityadvocate-overview-module"):window.console.log("M.block_integrityadvocate.init.js::Found overview_participant_table - DataTables is the wholeUI"); var b = a("#block_integrityadvocate_participant_table"); function d(a, b, c){"undefined" == typeof window.delayed_methods && (window.delayed_methods = {}), delayed_methods[a] = Date.now(); var d = delayed_methods[a]; setTimeout(function(){delayed_methods[a] != d || (delayed_methods[a] = "", b())}, c || 500)}var c = function(a){var b = "<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\"><tr><td>Override time:</td><td>" + a.overridetime + "</td></tr><tr><td>Override original status:</td><td>" + a.overridestatus + "</td></tr><tr><td>Overrider:</td><td>" + a.overrider + "</td></tr><tr><td>Override reason:</td><td>" + a.overridereason + "</td></tr></table>"; return window.console.log("M.block_integrityadvocate.init.js::Built childrow=", b), b}; class e{constructor(){this.self = this, this.fadetime = 300, this.frm = {}, this.prefix = "block_integrityadvocate_override"}preventdefault(a){return"undefined" != typeof a && a.preventDefault(), !1}overrideuiSetup(b){window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Started"); var c = this; return this.frm = b.find("." + this.prefix + "_form"), this.frm.eltEdit = b.find("." + this.prefix + "_edit"), this.frm.eltStatus = this.frm.find("." + this.prefix + "_status_select"), this.frm.eltReason = this.frm.find("." + this.prefix + "_reason"), this.frm.arrUserinputs = [this.frm.eltStatus, this.frm.eltReason], this.frm.eltTargetuserid = this.frm.find("." + this.prefix + "_targetuserid"), this.frm.eltOverrideuserid = this.frm.find("." + this.prefix + "_overrideuserid"), this.frm.eltSave = this.frm.find("." + this.prefix + "_save"), this.frm.eltLoading = this.frm.find("." + this.prefix + "_loading"), this.frm.eltCancel = this.frm.find("." + this.prefix + "_cancel"), this.frm.eltReason.attr("placeholder", M.util.get_string("block_integrityadvocate", "override_reason_label")).attr("pattern", "^[a-zA-Z0-9 .,_-]{0,32}").on("keyup keypress", function(a){var b = a.keyCode || a.which; if (window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Enter pressed"), 13 === b)return c.frm.eltSave.click(), a.preventDefault(), !1}), window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::Built frm", this.frm), this.frm.eltLoading.hide(), this.saveSetStatus(!1), this.frm.trigger("reset"), this.frm.eltSave.on("click", function(a){return window.console.log("M.block_integrityadvocate.init.js::overrideui::overrideuiSetup::eltSave.on.click()::Started"), c.validateAll() && c.saveClick(), a.preventDefault(), !1}), this.frm.eltEdit.on("click", function(a){return c.overrideuiShow(), a.preventDefault(), !1}), this.frm.eltCancel.on("click", function(a){return c.cancelClick(), a.preventDefault(), !1}), a(this.frm.arrUserinputs).each(function(a, b){b.on("change keyup blur", function(a){return d("validate_and_toggle_save_button", function(){c.saveSetStatus(c.validateAll())}, 600), a.preventDefault(), !1})}), this}cancelClick(){this.frm.trigger("reset"), this.overrideuiHide(), this.frm.closest("td").find(".oldstatusinfo, .block_integrityadvocate_overriden_icon").show(), a(".block_integrityadvocate_override_edit").show()}saveClick(){var a = this; this.inputsDisable(), window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Started with frm=", this.frm); var b = new URL(window.location.href); require(["core/ajax"], function(c){c.call([{methodname:"block_integrityadvocate_set_override", args:{status:a.frm.eltStatus.val(), reason:a.frm.eltReason.val(), targetuserid:a.frm.eltTargetuserid.val(), overrideuserid:a.frm.eltOverrideuserid.val(), blockinstanceid:b.searchParams.get("instanceid"), moduleid:a.frm.parents("tr").find(".block_integrityadvocate_participant_activitymodule").attr("data-cmid")}, done:function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.done"), window.location.reload(!0)}, fail:function(a, b, c){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.always"), console.log("textStatus", b), console.log("errorThrown", c), alert(M.util.get_string("moodle", "unknownerror")), window.location.reload(!0)}, always:function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::ajax.always"), a.inputsEnable(), a.cancelClick()}}])}), window.console.log("M.block_integrityadvocate.init.js::overrideui::saveClick::Done")}validateAll(){var a = this.validateReason(), b = this.validateStatus(); return a && b}validateStatus(){var a = this.frm.eltStatus, b = a.val(); return a[0].checkValidity() || 0 === b || 3 === b}validateReason(){var a = this.frm.eltReason; return window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with frm=", this.frm), window.console.log("M.block_integrityadvocate.init.js::overrideui::validateReason::Started with elt=", a), a.val(a.val().trim()), a[0].setCustomValidity(""), !!a[0].checkValidity() || (a[0].setCustomValidity(M.util.get_string("block_integrityadvocate", "override_reason_invalid")), !1)}saveSetStatus(a){a?this.saveEnable():this.saveDisable()}saveDisable(){var a = this; this.frm.eltSave.css("color", "grey").on("click." + a.prefix + "_disable", this.preventdefault)}saveEnable(){var a = this; this.frm.eltSave.css("color", "").off("click." + a.prefix + "_disable")}overrideuiShow(){this.frm.eltEdit.hide(), this.frm.show(), this.frm.eltSave.fadeOut(this.fadetime).fadeIn(this.fadetime), this.validateAll()}overrideuiHide(){this.frm.hide(), this.frm.eltEdit.fadeIn(this.fadetime)}inputsDisable(){this.frm.eltCancel.hide(), this.frm.eltSave.hide(), this.frm.eltLoading.show(), a(this.frm.arrUserinputs).each(function(a, b){b.attr("disabled", "disabled")})}inputsEnable(){this.frm.eltCancel.show(), this.frm.eltSave.show(), this.frm.eltLoading.hide(), a(this.frm.arrUserinputs).each(function(a, b){b.removeAttr("disabled")})}}b.dataTable({autoWidth:!0, language:{search:M.util.get_string("filter", "moodle") + "&nbsp;"}, ordering:!0, order:[[0, "desc"], [1, "desc"]], paging:!1, "row-border":!0, searching:!0, scrollX:!0, columnDefs:[{targets:[4], orderable:!1, searchable:!1}], initComplete:function(){window.console.log("M.block_integrityadvocate.init.js::DataTables.initComplete:fired"); var f = b.dataTable(); f.api().columns([6, 7, 8, 9]).visible(!1), b.find(".block_integrityadvocate_participant_session_overridden").each(function(){a(this).append("<i class=\"fa fa-chevron-circle-down block_integrityadvocate_overriden_icon\" aria-hidden=\"true\" title=\"" + M.util.get_string("block_integrityadvocate", "viewhide_overrides") + "\"></i>"), a(this).find("i.block_integrityadvocate_overriden_icon").click(function(){window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click fired"); var b = a(this).parents("tr"), e = f.api().row(b); if (e.child.isShown())window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:This row is already open - close it"), e.child.hide(), b.removeClass("shown"), a(this).removeClass("fa-chevron-circle-up").addClass("fa-chevron-circle-down");  else{window.console.log("M.block_integrityadvocate.init.js::overridden_icon.click:Open this row"); var g = {overridetime:e.data()[6], overridestatus:e.data()[7], overrider:e.data()[8], overridereason:e.data()[9]}; e.child(c(g)).show(), b.addClass("shown"), a(this).removeClass("fa-chevron-circle-down").addClass("fa-chevron-circle-up")}})}), b.find(".block_integrityadvocate_participant_session_overrideui").each(function(){var b = a(this), c = b.contents().filter((a, b) => 3 === b.nodeType); b.prepend("<div class=\"oldstatusinfo\">" + c.text() + "</div>"), c.remove(), b.append("<i class=\"fa fa-pencil-square-o block_integrityadvocate_override_edit\" aria-hidden=\"true\" title=\"" + M.util.get_string("block_integrityadvocate", "override_form_label") + "\"></i>"); var d = new e; b.find("i.block_integrityadvocate_override_edit").click(function(){window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Override button clicked"); var c; window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::No existing form found"), b.find(".oldstatusinfo").hide(), 1 > b.find(".block_integrityadvocate_override_form").length?(window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Add the editing form and init it"), b.append(a(".block_integrityadvocate_override_form").first().clone()), b.find(".block_integrityadvocate_override_form").show(), c = d.overrideuiSetup(b)):(window.console.log("M.block_integrityadvocate.init.js::overrideui::add_override_click::Existing form found - show it"), b.find(".block_integrityadvocate_override_form").show()), a(".block_integrityadvocate_override_edit").hide(), b.find(".block_integrityadvocate_overriden_icon").hide(), d.overrideuiShow()})}), b.find(".block_integrityadvocate_participant_session_jquimodal").on("click.modalpic", function(){window.console.log("M.block_integrityadvocate.init.js::jquimodal.click.modalpic fired"), a("#dialog").html("<div id=\"dialog\" title=\"image\"><img src=\"" + a(this).attr("src") + "\" width=\"500\" /></div>").dialog({modal:!0, width:"auto", open:function(){a(".ui-widget-overlay").bind("click", function(){a("#dialog").dialog("close")})}})})}}); }}}});
        //# sourceMappingURL=init.min.js.map
