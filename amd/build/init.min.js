define(["jquery", "jqueryui", "block_integrityadvocate/jquery.dataTables"], function(a){return{init:function(){if (a("body").hasClass("block_integrityadvocate-overview-course")){window.console.log("Found overview_participants_table"); var b = {autoWidth:!1, columnDefs:[{orderable:!1, targets:[4, 5]}], info:!1, language:{search:M.str.moodle.filter + "&nbsp;"}, order:[], ordering:!1, paginate:!1, paging:!1, searching:!0}; a("#participants").DataTable(b)}if (a("body").hasClass("block_integrityadvocate-overview-user")){function d(a, b, c){"undefined" == typeof window.delayed_methods && (window.delayed_methods = {}), delayed_methods[a] = Date.now(); var d = delayed_methods[a]; setTimeout(function(){delayed_methods[a] != d || (delayed_methods[a] = "", b())}, c || 500)}window.console.log("init.mins.js: Found overview_participant_table"); var c = a("#block_integrityadvocate_participant_table"), e = function(a){var b = "<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\"><tr><td>Override time:</td><td>" + a.overridetime + "</td></tr><tr><td>Override original status:</td><td>" + a.overridestatus + "</td></tr><tr><td>Overrider:</td><td>" + a.overrider + "</td></tr><tr><td>Override reason:</td><td>" + a.overridereason + "</td></tr></table>"; return window.console.log("Build childrow=", b), b}; class f{constructor(){this.self = this, this.fadetime = 300, this.frm = {}, this.prefix = "block_integrityadvocate_override"}preventdefault(a){return"undefined" != typeof a && a.preventDefault(), !1}setup_override_form(b){window.console.log("overrideui::setup_override_form::Started"); var c = this; return this.frm = b.find("." + this.prefix + "_form"), this.frm.elt_edit = b.find("." + this.prefix + "_edit"), this.frm.elt_status = this.frm.find("." + this.prefix + "_status_select"), this.frm.elt_reason = this.frm.find("." + this.prefix + "_reason"), this.frm.userinputs = [this.frm.elt_status, this.frm.elt_reason], this.frm.elt_targetuserid = this.frm.find("." + this.prefix + "_targetuserid"), this.frm.elt_overrideuserid = this.frm.find("." + this.prefix + "_overrideuserid"), this.frm.elt_save = this.frm.find("." + this.prefix + "_save"), this.frm.elt_loading = this.frm.find("." + this.prefix + "_loading"), this.frm.elt_cancel = this.frm.find("." + this.prefix + "_cancel"), this.frm.elt_reason.attr("placeholder", M.str.block_integrityadvocate.override_reason_label).attr("pattern", "^[a-zA-Z0-9 .,_-]{0,32}").on("keyup keypress", function(a){var b = a.keyCode || a.which; if (window.console.log("overrideui::setup_override_form::Enter pressed"), 13 === b)return c.frm.elt_save.click(), a.preventDefault(), !1}), window.console.log("overrideui::setup_override_form::Built frm", this.frm), this.frm.elt_loading.hide(), this.save_set_status(!1), this.frm.trigger("reset"), this.frm.elt_save.on("click", function(a){return window.console.log("overrideui::setup_override_form::elt_save.on.click()::Started"), c.validate_all() && c.save_click(), a.preventDefault(), !1}), this.frm.elt_edit.on("click", function(a){return c.show_overrideui(), a.preventDefault(), !1}), this.frm.elt_cancel.on("click", function(a){return c.cancel_click(), a.preventDefault(), !1}), a(this.frm.userinputs).each(function(a, b){b.on("change keyup blur", function(a){return d("validate_and_toggle_save_button", function(){c.save_set_status(c.validate_all())}, 600), a.preventDefault(), !1})}), this}cancel_click(){this.frm.trigger("reset"), this.hide_overrideui(), this.frm.closest("td").find(".oldstatusinfo, .block_integrityadvocate_overriden_icon").show(), a(".block_integrityadvocate_override_edit").show()}save_click(){var a = this; this.disable_ui(), window.console.log("overrideui::save_click::Started with frm=", this.frm); var b = new URL(window.location.href); require(["core/ajax", "core/notification"], function(c){c.call([{methodname:"block_integrityadvocate_set_override", args:{status:a.frm.elt_status.val(), reason:a.frm.elt_reason.val(), targetuserid:a.frm.elt_targetuserid.val(), overrideuserid:a.frm.elt_overrideuserid.val(), blockinstanceid:b.searchParams.get("instanceid"), moduleid:a.frm.parents("tr").find(".block_integrityadvocate_participant_activitymodule").attr("data-cmid")}, done:function(){window.console.log("overrideui::save_click::ajax.done"), window.location.reload(!0)}, fail:function(a, b, c){window.console.log("overrideui::save_click::ajax.always"), console.log("textStatus", b), console.log("errorThrown", c), alert(M.str.moodle.unknownerror), window.location.reload(!0)}, always:function(){window.console.log("overrideui::save_click::ajax.always"), a.enable_ui(), a.cancel_click()}}])}), window.console.log("overrideui::save_click::Done")}validate_all(){var a = this.validate_reason(), b = this.validate_status(); return a && b}validate_status(){var a = this.frm.elt_status, b = a.val(); return a[0].checkValidity() || 0 === b || 3 === b}validate_reason(){var a = this.frm.elt_reason; return window.console.log("overrideui::validate_reason::Started with frm=", this.frm), window.console.log("overrideui::validate_reason::Started with elt=", a), a.val(a.val().trim()), a[0].setCustomValidity(""), !!a[0].checkValidity() || (a[0].setCustomValidity(M.str.block_integrityadvocate.override_reason_invalid), !1)}save_set_status(a){a?this.save_enable():this.save_disable()}save_disable(){var a = this; this.frm.elt_save.css("color", "grey").on("click." + a.prefix + "_disable", this.preventdefault)}save_enable(){var a = this; this.frm.elt_save.css("color", "").off("click." + a.prefix + "_disable")}show_overrideui(){this.frm.elt_edit.hide(), this.frm.show(), this.frm.elt_save.fadeOut(this.fadetime).fadeIn(this.fadetime), this.validate_all()}hide_overrideui(){this.frm.hide(), this.frm.elt_edit.fadeIn(this.fadetime)}disable_ui(){this.frm.elt_cancel.hide(), this.frm.elt_save.hide(), this.frm.elt_loading.show(), a(this.frm.userinputs).each(function(a, b){b.attr("disabled", "disabled")})}enable_ui(){this.frm.elt_cancel.show(), this.frm.elt_save.show(), this.frm.elt_loading.hide(), a(this.frm.userinputs).each(function(a, b){b.removeAttr("disabled")})}}var b = {autoWidth:!0, language:{search:M.str.moodle.filter + "&nbsp;"}, ordering:!0, order:[[0, "desc"], [1, "desc"]], paging:!1, "row-border":!0, searching:!0, scrollX:!0, columnDefs:[{targets:[4], orderable:!1, searchable:!1}], initComplete:function(){window.console.log("DataTables.initComplete fired"); var b = c.dataTable(); b.api().columns([6, 7, 8, 9]).visible(!1), c.find(".block_integrityadvocate_participant_session_overridden").each(function(){a(this).append("<i class=\"fa fa-chevron-circle-down block_integrityadvocate_overriden_icon\" aria-hidden=\"true\" title=\"" + M.str.block_integrityadvocate.viewhide_overrides + "\"></i>"), a(this).find("i.block_integrityadvocate_overriden_icon").click(function(){window.console.log("click.override fired"); var c = a(this).parents("tr"), f = b.api().row(c); if (f.child.isShown())window.console.log("This row is already open - close it"), f.child.hide(), c.removeClass("shown"), a(this).removeClass("fa-chevron-circle-up").addClass("fa-chevron-circle-down");  else{window.console.log("Open this row"); var g = {overridetime:f.data()[6], overridestatus:f.data()[7], overrider:f.data()[8], overridereason:f.data()[9]}; f.child(e(g)).show(), c.addClass("shown"), a(this).removeClass("fa-chevron-circle-down").addClass("fa-chevron-circle-up")}})}), c.find(".block_integrityadvocate_participant_session_overrideui").each(function(){var b = a(this), c = b.contents().filter((a, b) => 3 === b.nodeType); b.prepend("<div class=\"oldstatusinfo\">" + c.text() + "</div>"), c.remove(), b.append("<i class=\"fa fa-pencil-square-o block_integrityadvocate_override_edit\" aria-hidden=\"true\" title=\"" + M.str.block_integrityadvocate.override_form_label + "\"></i>"); var d = new f; b.find("i.block_integrityadvocate_override_edit").click(function(){window.console.log("overrideui::add_override_click::Override button clicked"); var c; window.console.log("overrideui::add_override_click::No existing form found"), b.find(".oldstatusinfo").hide(), 1 > b.find(".block_integrityadvocate_override_form").length?(window.console.log("overrideui::add_override_click::Add the editing form and init it"), b.append(a(".block_integrityadvocate_override_form").first().clone()), b.find(".block_integrityadvocate_override_form").show(), c = d.setup_override_form(b)):(window.console.log("overrideui::add_override_click::Existing form found - show it"), b.find(".block_integrityadvocate_override_form").show()), a(".block_integrityadvocate_override_edit").hide(), b.find(".block_integrityadvocate_overriden_icon").hide(), d.show_overrideui()})}), c.find(".block_integrityadvocate_participant_session_jquimodal").on("click.modalpic", function(){window.console.log("jquimodal.click.modalpic fired"), a("#dialog").html("<div id=\"dialog\" title=\"image\"><img src=\"" + a(this).attr("src") + "\" width=\"500\" /></div>").dialog({modal:!0, width:"auto", open:function(){a(".ui-widget-overlay").bind("click", function(){a("#dialog").dialog("close")})}})})}}; c.dataTable(b)}}}});
//# sourceMappingURL=init.min.js.map
